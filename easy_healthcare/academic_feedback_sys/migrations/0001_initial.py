# Generated by Django 4.2.7 on 2024-05-24 12:29

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="ClassLevel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "class_level",
                    models.CharField(
                        choices=[
                            ("F4", "Form 4"),
                            ("F5", "Form 5"),
                            ("F6", "Form 6"),
                            ("SS1", "Senior School 1"),
                            ("SS2", "Senior School 2"),
                            ("SS3", "Senior School 3"),
                        ],
                        max_length=15,
                        unique=True,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Score",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "score",
                    models.IntegerField(
                        choices=[
                            (0, "0"),
                            (1, "1"),
                            (2, "2"),
                            (3, "3"),
                            (4, "4"),
                            (5, "5"),
                            (6, "6"),
                            (7, "7"),
                            (8, "8"),
                            (9, "9"),
                            (10, "10"),
                            (11, "11"),
                            (12, "12"),
                            (13, "13"),
                            (14, "14"),
                            (15, "15"),
                            (16, "16"),
                            (17, "17"),
                            (18, "18"),
                            (19, "19"),
                            (20, "20"),
                            (21, "21"),
                            (22, "22"),
                            (23, "23"),
                            (24, "24"),
                            (25, "25"),
                            (26, "26"),
                            (27, "27"),
                            (28, "28"),
                            (29, "29"),
                            (30, "30"),
                            (31, "31"),
                            (32, "32"),
                            (33, "33"),
                            (34, "34"),
                            (35, "35"),
                            (36, "36"),
                            (37, "37"),
                            (38, "38"),
                            (39, "39"),
                            (40, "40"),
                            (41, "41"),
                            (42, "42"),
                            (43, "43"),
                            (44, "44"),
                            (45, "45"),
                            (46, "46"),
                            (47, "47"),
                            (48, "48"),
                            (49, "49"),
                            (50, "50"),
                            (51, "51"),
                            (52, "52"),
                            (53, "53"),
                            (54, "54"),
                            (55, "55"),
                            (56, "56"),
                            (57, "57"),
                            (58, "58"),
                            (59, "59"),
                            (60, "60"),
                            (61, "61"),
                            (62, "62"),
                            (63, "63"),
                            (64, "64"),
                            (65, "65"),
                            (66, "66"),
                            (67, "67"),
                            (68, "68"),
                            (69, "69"),
                            (70, "70"),
                            (71, "71"),
                            (72, "72"),
                            (73, "73"),
                            (74, "74"),
                            (75, "75"),
                            (76, "76"),
                            (77, "77"),
                            (78, "78"),
                            (79, "79"),
                            (80, "80"),
                            (81, "81"),
                            (82, "82"),
                            (83, "83"),
                            (84, "84"),
                            (85, "85"),
                            (86, "86"),
                            (87, "87"),
                            (88, "88"),
                            (89, "89"),
                            (90, "90"),
                            (91, "91"),
                            (92, "92"),
                            (93, "93"),
                            (94, "94"),
                            (95, "95"),
                            (96, "96"),
                            (97, "97"),
                            (98, "98"),
                            (99, "99"),
                            (100, "100"),
                        ],
                        unique=True,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Semester",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "semester",
                    models.IntegerField(
                        choices=[(1, "1"), (2, "2"), (3, "3")], unique=True
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Subject",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "subject",
                    models.CharField(
                        choices=[
                            ("MATHS", "Mathematics"),
                            ("ENG", "English"),
                            ("PHYS", "Physics"),
                            ("CHEM", "Chemistry"),
                            ("BIOL", "Biology"),
                            ("GEOG", "Geography"),
                            ("CIVS", "Civics"),
                            ("AGRI SCI", "Agricultural Science"),
                            ("ECON", "Economics"),
                            ("COMR", "Commerce"),
                            ("GOVT", "Government"),
                            ("NUTR", "Nutrition"),
                            ("RELI ST", "Religious Studies"),
                            ("TECH DRAW", "Technical Drawing"),
                            ("LIT ENG", "Literature in English"),
                            ("ACCT", "Accounting"),
                            ("MKT", "Marketing"),
                        ],
                        max_length=20,
                        unique=True,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Teacher",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "staff",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="teacher",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "subject",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="teachers",
                        to="academic_feedback_sys.subject",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Student",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("first_name", models.CharField(max_length=300)),
                ("middle_name", models.CharField(max_length=300)),
                ("last_name", models.CharField(max_length=300)),
                (
                    "secret_password",
                    models.UUIDField(default=uuid.uuid4, editable=False),
                ),
                (
                    "teachers",
                    models.ManyToManyField(
                        related_name="students", to="academic_feedback_sys.teacher"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Grade",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("semester_year", models.DateField()),
                (
                    "accounting",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="accounting_grades",
                        to="academic_feedback_sys.subject",
                    ),
                ),
                (
                    "accounting_score",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="accounting_score",
                        to="academic_feedback_sys.score",
                    ),
                ),
                (
                    "agricultural_science",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="agricultural_science_grades",
                        to="academic_feedback_sys.subject",
                    ),
                ),
                (
                    "agricultural_science_score",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="agricultural_science_score",
                        to="academic_feedback_sys.score",
                    ),
                ),
                (
                    "biology",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="biology_grades",
                        to="academic_feedback_sys.subject",
                    ),
                ),
                (
                    "biology_score",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="biology_score",
                        to="academic_feedback_sys.score",
                    ),
                ),
                (
                    "chemistry",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="chemistry_grades",
                        to="academic_feedback_sys.subject",
                    ),
                ),
                (
                    "chemistry_score",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="chemistry_score",
                        to="academic_feedback_sys.score",
                    ),
                ),
                (
                    "civics",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="civics_grades",
                        to="academic_feedback_sys.subject",
                    ),
                ),
                (
                    "civics_score",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="civics_score",
                        to="academic_feedback_sys.score",
                    ),
                ),
                (
                    "class_level",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="class_grades",
                        to="academic_feedback_sys.classlevel",
                    ),
                ),
                (
                    "commerce",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="commerce_grades",
                        to="academic_feedback_sys.subject",
                    ),
                ),
                (
                    "commerce_score",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="commerce_score",
                        to="academic_feedback_sys.score",
                    ),
                ),
                (
                    "economics",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="economics_grades",
                        to="academic_feedback_sys.subject",
                    ),
                ),
                (
                    "economics_score",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="economics_score",
                        to="academic_feedback_sys.score",
                    ),
                ),
                (
                    "english",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="english_grades",
                        to="academic_feedback_sys.subject",
                    ),
                ),
                (
                    "english_score",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="english_score",
                        to="academic_feedback_sys.score",
                    ),
                ),
                (
                    "geography",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="geography_grades",
                        to="academic_feedback_sys.subject",
                    ),
                ),
                (
                    "geography_score",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="geography_score",
                        to="academic_feedback_sys.score",
                    ),
                ),
                (
                    "government",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="government_grades",
                        to="academic_feedback_sys.subject",
                    ),
                ),
                (
                    "government_score",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="government_score",
                        to="academic_feedback_sys.score",
                    ),
                ),
                (
                    "literature_in_english",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="literature_in_english_grades",
                        to="academic_feedback_sys.subject",
                    ),
                ),
                (
                    "literature_in_english_score",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="literature_in_english_score",
                        to="academic_feedback_sys.score",
                    ),
                ),
                (
                    "marketing",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="marketing_grades",
                        to="academic_feedback_sys.subject",
                    ),
                ),
                (
                    "marketing_score",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="marketing_score",
                        to="academic_feedback_sys.score",
                    ),
                ),
                (
                    "math",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="math_grades",
                        to="academic_feedback_sys.subject",
                    ),
                ),
                (
                    "math_score",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="math_score",
                        to="academic_feedback_sys.score",
                    ),
                ),
                (
                    "nutrition",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="nutrition_grades",
                        to="academic_feedback_sys.subject",
                    ),
                ),
                (
                    "nutrition_score",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="nutrition_score",
                        to="academic_feedback_sys.score",
                    ),
                ),
                (
                    "physics",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="physics_grades",
                        to="academic_feedback_sys.subject",
                    ),
                ),
                (
                    "physics_score",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="physics_score",
                        to="academic_feedback_sys.score",
                    ),
                ),
                (
                    "religious_studies",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="religious_studies_grades",
                        to="academic_feedback_sys.subject",
                    ),
                ),
                (
                    "religious_studies_score",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="religious_studies_score",
                        to="academic_feedback_sys.score",
                    ),
                ),
                (
                    "semester",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="semester_grades",
                        to="academic_feedback_sys.semester",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="grades",
                        to="academic_feedback_sys.student",
                    ),
                ),
                (
                    "technical_drawing",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="technical_drawing_grades",
                        to="academic_feedback_sys.subject",
                    ),
                ),
                (
                    "technical_drawing_score",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="technical_drawing_score",
                        to="academic_feedback_sys.score",
                    ),
                ),
            ],
        ),
    ]
