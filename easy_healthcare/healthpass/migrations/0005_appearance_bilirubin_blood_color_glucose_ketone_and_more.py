# Generated by Django 4.2.7 on 2024-03-27 11:10

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import healthpass.models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        (
            "healthpass",
            "0004_allergy_country_gender_immunization_relationship_and_more",
        ),
    ]

    operations = [
        migrations.CreateModel(
            name="Appearance",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "appearance",
                    models.CharField(
                        choices=[
                            ("Clear", "Clear"),
                            ("Hazy", "Hazy"),
                            ("Slightly Cloudy", "Slightly Cloudy"),
                        ],
                        max_length=20,
                        unique=True,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Bilirubin",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "bilirubin",
                    models.CharField(
                        choices=[("Positive", "Positive"), ("Negative", "Negative")],
                        max_length=12,
                        unique=True,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Blood",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "blood",
                    models.CharField(
                        choices=[("Negative", "Negative"), ("Positive", "Positive")],
                        max_length=12,
                        unique=True,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Color",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "color",
                    models.CharField(
                        choices=[
                            ("Pale", "Pale"),
                            ("Dark Yellow", "Dark Yellow"),
                            ("Other", "Other Colors"),
                        ],
                        max_length=13,
                        unique=True,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Glucose",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "glucose",
                    models.CharField(
                        choices=[("Negative", "Negative"), ("Positive", "Positive")],
                        max_length=12,
                        unique=True,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Ketone",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "ketone",
                    models.CharField(
                        choices=[("Positive", "Positive"), ("Negative", "Negative")],
                        max_length=12,
                        unique=True,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="MicroscopicIndicated",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "microscopic_indicated",
                    models.CharField(
                        choices=[("Negative", "Negative"), ("Positive", "Positive")],
                        max_length=12,
                        unique=True,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Nitrite",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nitrite",
                    models.CharField(
                        choices=[("Positive", "Positive"), ("Negative", "Negative")],
                        max_length=12,
                        unique=True,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Protein",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "protein",
                    models.CharField(
                        choices=[("Negative", "Negative"), ("Positive", "Positive")],
                        max_length=12,
                        unique=True,
                    ),
                ),
            ],
        ),
        migrations.AlterField(
            model_name="generalinfo",
            name="weight",
            field=models.FloatField(
                blank=True,
                help_text="Please Enter your weight value in float 98.0",
                null=True,
            ),
        ),
        migrations.CreateModel(
            name="Urinalysis",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "ph",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        max_digits=2,
                        null=True,
                        validators=[healthpass.models.validate_ph_field],
                    ),
                ),
                (
                    "specific_gravity",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        max_digits=4,
                        null=True,
                        validators=[healthpass.models.validate_specific_gravity_field],
                    ),
                ),
                (
                    "urobilinogen",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        max_digits=2,
                        null=True,
                        validators=[healthpass.models.validate_urobilinogen_field],
                    ),
                ),
                (
                    "appearance",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="appearance_urinalysis",
                        to="healthpass.appearance",
                    ),
                ),
                (
                    "bilirubin",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="bilirubin_urinalysis",
                        to="healthpass.bilirubin",
                    ),
                ),
                (
                    "blood",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="blood_urinalysis",
                        to="healthpass.blood",
                    ),
                ),
                (
                    "color",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="color_urinalysis",
                        to="healthpass.color",
                    ),
                ),
                (
                    "glucose",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="glucose_urinalysis",
                        to="healthpass.glucose",
                    ),
                ),
                (
                    "ketone",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="ketone_urinalysis",
                        to="healthpass.ketone",
                    ),
                ),
                (
                    "microscopic_indicated",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="microscopic_indicated_urinalysis",
                        to="healthpass.microscopicindicated",
                    ),
                ),
                (
                    "nitrite",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="nitrite_urinalysis",
                        to="healthpass.nitrite",
                    ),
                ),
                (
                    "owner",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="owner_urinalysis",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "protein",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="protein_urinalysis",
                        to="healthpass.protein",
                    ),
                ),
            ],
        ),
    ]
